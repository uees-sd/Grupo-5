/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package InterfazGraficaProfesor;

import admincenterprofesor.AdminCenterProfesor;
import java.awt.Image;
import java.util.ArrayList;
import java.util.concurrent.CompletableFuture;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import models.Batalla;
import models.Usuario;

/**
 *
 * @author aleja
 */
public class AdminJuego extends javax.swing.JFrame {

    //variables
    private boolean prueba = false;
    private AdminCenterProfesor admProfesor;
    private ArrayList<Batalla> batallas;
    private Usuario jugador1;
    private Usuario jugador2;
    ArrayList<Usuario> jugadores;
    ArrayList<Usuario> jugadoresDisponibles;
    ArrayList<Usuario> jugadoresEnBatalla;
    String[] listaJugadoresDisponiblesArr = new String[20];
    String[] listaJugadoresArr = new String[20];
    String[] listaJugadoresBatalla = new String[2];
    String[] listaBatallas = new String[10];
    /**
     * Creates new form AdminJuego
     */
    public AdminJuego() throws ClassNotFoundException {
        admProfesor = new AdminCenterProfesor();
        batallas = new ArrayList<>();
        jugadoresEnBatalla =  new ArrayList<>();
        jugadores = new ArrayList<>();
        jugadoresDisponibles =  new ArrayList<>();
        
        initComponents();
        llenarListaGraficaJugadores();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnSeleccionarJugador = new java.awt.Button();
        jScrollPane1 = new javax.swing.JScrollPane();
        gListTxtJugadores = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        gListTxtJugadoresDisp = new javax.swing.JList<>();
        btnActualizarJugadoresDisponibles = new java.awt.Button();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAPreguntas = new javax.swing.JTextArea();
        btnCrearBatalla = new java.awt.Button();
        jScrollPane4 = new javax.swing.JScrollPane();
        gListTxtJugadoresSelec = new javax.swing.JList<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnCargarPreguntas = new java.awt.Button();
        btnCargarJugadores = new java.awt.Button();
        btnIniciarBatallas = new java.awt.Button();
        btnSiguienteRonda = new java.awt.Button();
        jScrollPane5 = new javax.swing.JScrollPane();
        gListTxtBatallas = new javax.swing.JList<>();
        jLabel8 = new javax.swing.JLabel();
        jlabelCargaJugadoresConf = new javax.swing.JLabel();
        jlabelCargaPreguntasConf = new javax.swing.JLabel();
        btnPausarBatallas = new java.awt.Button();
        jScrollPane7 = new javax.swing.JScrollPane();
        gListTxtBatallas1 = new javax.swing.JList<>();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        gListTxtRondas = new javax.swing.JList<>();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setText("JugadoresConectados");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setText("Preguntas");

        btnSeleccionarJugador.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnSeleccionarJugador.setLabel("Seleccionar");
        btnSeleccionarJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarJugadorActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(gListTxtJugadores);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setText("JugadoresDisponibles");

        jScrollPane2.setViewportView(gListTxtJugadoresDisp);

        btnActualizarJugadoresDisponibles.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnActualizarJugadoresDisponibles.setLabel("Actualizar");
        btnActualizarJugadoresDisponibles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarJugadoresDisponiblesActionPerformed(evt);
            }
        });

        txtAPreguntas.setColumns(20);
        txtAPreguntas.setRows(5);
        jScrollPane3.setViewportView(txtAPreguntas);

        btnCrearBatalla.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnCrearBatalla.setLabel("Crear Batalla");
        btnCrearBatalla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearBatallaActionPerformed(evt);
            }
        });

        jScrollPane4.setViewportView(gListTxtJugadoresSelec);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel6.setText("JugadoresSeleccionados");

        jLabel7.setText("Formato para preguntas ejemplo (Cuantos planetas tiene el sistema solar? ;ciencias;4,8 (SI),7,10)");

        btnCargarPreguntas.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnCargarPreguntas.setLabel("Cargar Preguntas");
        btnCargarPreguntas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarPreguntasActionPerformed(evt);
            }
        });

        btnCargarJugadores.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnCargarJugadores.setLabel("CargarJugadores");
        btnCargarJugadores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarJugadoresActionPerformed(evt);
            }
        });

        btnIniciarBatallas.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnIniciarBatallas.setLabel("Iniciar Batallas");
        btnIniciarBatallas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarBatallasActionPerformed(evt);
            }
        });

        btnSiguienteRonda.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnSiguienteRonda.setLabel("Siguiente Ronda");
        btnSiguienteRonda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteRondaActionPerformed(evt);
            }
        });

        jScrollPane5.setViewportView(gListTxtBatallas);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel8.setText("Podio");

        btnPausarBatallas.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnPausarBatallas.setLabel("Pausar Batallas");
        btnPausarBatallas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPausarBatallasActionPerformed(evt);
            }
        });

        jScrollPane7.setViewportView(gListTxtBatallas1);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel9.setText("Batallas");

        jScrollPane8.setViewportView(gListTxtRondas);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel10.setText("Rondas");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addComponent(btnActualizarJugadoresDisponibles, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(97, 97, 97)
                                .addComponent(btnSeleccionarJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(161, 161, 161)
                                .addComponent(btnCargarJugadores, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jlabelCargaJugadoresConf))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jlabelCargaPreguntasConf)
                        .addGap(215, 215, 215))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(10, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnPausarBatallas, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnCargarPreguntas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSiguienteRonda, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnIniciarBatallas, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCrearBatalla, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
            .addGroup(layout.createSequentialGroup()
                .addGap(656, 656, 656)
                .addComponent(jLabel8)
                .addGap(211, 211, 211)
                .addComponent(jLabel10)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(228, 228, 228)
                    .addComponent(jLabel9)
                    .addContainerGap(1174, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(2, 2, 2)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnSeleccionarJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnCargarJugadores, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnActualizarJugadoresDisponibles, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jlabelCargaJugadoresConf)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jlabelCargaPreguntasConf))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(10, 10, 10)
                        .addComponent(btnCargarPreguntas, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCrearBatalla, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnIniciarBatallas, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSiguienteRonda, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPausarBatallas, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(648, Short.MAX_VALUE)
                    .addComponent(jLabel9)
                    .addGap(76, 76, 76)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void btnSeleccionarJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarJugadorActionPerformed
        try
        {
            gListTxtJugadoresSelec.setListData(listaJugadoresBatalla);
            int indexJugador = gListTxtJugadoresDisp.getSelectedIndex();
            String nombre = jugadores.get(indexJugador).getUserName();
            if(listaJugadoresBatalla[0] == null && jugadoresDisponibles.stream().anyMatch(c -> c.getUserName().equals(nombre))){
                jugador1 = new Usuario();
                jugador1.setUserName(jugadores.get(indexJugador).getUserName());
                jugador1.setIp(jugadores.get(indexJugador).getIp());
                jugador1.setAvatar(jugadores.get(indexJugador).getAvatar());
                jugadoresDisponibles.removeIf(c -> c.getIp()== jugador1.getIp());
                listaJugadoresDisponiblesArr[indexJugador] = null;
                jugadoresEnBatalla.add(jugador1);
                
                listaJugadoresBatalla[0] = jugador1.getUserName();
                //txtJugador1.setText(jugador1.getUserName());
            }  
            else if(listaJugadoresBatalla[1] == null && jugadoresDisponibles.stream().anyMatch(c -> c.getUserName().equals(nombre))){
                jugador2 = new Usuario();
                jugador2.setUserName(jugadores.get(indexJugador).getUserName());
                jugador2.setIp(jugadores.get(indexJugador).getIp());
                jugador2.setAvatar(jugadores.get(indexJugador).getAvatar());
                jugadoresDisponibles.removeIf(c -> c.getIp()== jugador2.getIp());
                listaJugadoresDisponiblesArr[indexJugador] = null;
                jugadoresEnBatalla.add(jugador2);
                listaJugadoresBatalla[1] = jugador2.getUserName();
                //txtJugador2.setText(jugador2.getUserName());
            }  
        }catch(Exception e)
        {
           JOptionPane.showMessageDialog(null, "Ingresa un jugador valido", "Error al seleccionar jugador", JOptionPane.ERROR_MESSAGE);
        }
        
        
        
    }//GEN-LAST:event_btnSeleccionarJugadorActionPerformed

    
    private void btnActualizarJugadoresDisponiblesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarJugadoresDisponiblesActionPerformed
        gListTxtJugadores.removeAll();
        gListTxtJugadoresDisp.removeAll();
        jugadores = new ArrayList<>();
        jugadoresDisponibles =  new ArrayList<>();
        try {
            llenarListaGraficaJugadores();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AdminJuego.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnActualizarJugadoresDisponiblesActionPerformed

    private void btnCrearBatallaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearBatallaActionPerformed
        String batallastr = admProfesor.crearBatalla();
        char posicion = batallastr.charAt(0);
        listaBatallas[Character.getNumericValue(posicion) - 1] = batallastr;
        gListTxtBatallas.setListData(listaBatallas);
    }//GEN-LAST:event_btnCrearBatallaActionPerformed

    private void btnCargarPreguntasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarPreguntasActionPerformed
        String contenido = txtAPreguntas.getText();
        String[] lineas = contenido.split("\n");
        
        for(String linea : lineas){
            boolean resp = admProfesor.cargarPreguntas(linea);
        }
         mostrarCheck("CargaPreguntas");
    }//GEN-LAST:event_btnCargarPreguntasActionPerformed

    private void btnCargarJugadoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarJugadoresActionPerformed
        int contador = 0;
        for(Usuario jugador : jugadoresEnBatalla){
            admProfesor.cargarJugador(jugador, contador);
            contador++;
        }
        mostrarCheck("CargaJugadores");
        
    }//GEN-LAST:event_btnCargarJugadoresActionPerformed

    private void mostrarCheck(String seccion){
        String imagePath = "src\\main\\java\\resources\\visto.png";
        ImageIcon imageIcon = new ImageIcon(imagePath);
        Image imagen = imageIcon.getImage();
        Image imagenRedimensionada = imagen.getScaledInstance(50, 50, Image.SCALE_SMOOTH);
        ImageIcon imageIconRedimensionado = new ImageIcon(imagenRedimensionada);
        switch (seccion) {
            case "CargaJugadores":
                jlabelCargaJugadoresConf.setSize(50,50);
                jlabelCargaJugadoresConf.setIcon(imageIconRedimensionado);
                break;
            case "CargaPreguntas":
                jlabelCargaPreguntasConf.setSize(50,50);
                jlabelCargaPreguntasConf.setIcon(imageIconRedimensionado);
                break;
            default:
                throw new AssertionError();
        }
    }
    
    private void llenarListaGraficaJugadores() throws ClassNotFoundException
    {
        
        
        gListTxtJugadores.setListData(listaJugadoresArr);
        gListTxtJugadoresDisp.setListData(listaJugadoresDisponiblesArr);
        int contador = 0;
        if(prueba)
        {
            Usuario u1= new Usuario("Alejandro", "jugador1", "192.668.1.45");
            Usuario u2= new Usuario("Sofia", "jugador2", "192.668.1.65");
            Usuario u3= new Usuario("Sonia", "jugador3", "192.668.1.39");
            Usuario u4= new Usuario("Juan", "jugador4", "192.668.1.3");
            jugadores.add(u1);
            jugadores.add(u2);
            jugadores.add(u3);
            jugadores.add(u4);
            jugadoresDisponibles.addAll(jugadores);
            for(Usuario usuario : jugadores)
            {
                listaJugadoresArr[contador] = usuario.getUserName();
                listaJugadoresDisponiblesArr[contador] = usuario.getUserName();
                contador++;
                if(contador == jugadores.size()){
                    for(int i = contador; i<listaJugadoresArr.length;i++){
                        listaJugadoresArr[i] = null;
                        listaJugadoresDisponiblesArr[i] = null;
                    }
                }
            }
        } else {
            CompletableFuture.supplyAsync(() -> {
                try {
                    jugadores = admProfesor.getJugadoresConectados();
                    jugadoresDisponibles.addAll(jugadores);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(AdminJuego.class.getName()).log(Level.SEVERE, null, ex);
                }
                return jugadores;
            }).thenRun(() -> {
                // Actualizar la interfaz gráfica en el hilo de eventos de Swing
                SwingUtilities.invokeLater(() -> {
                    int index = 0;
                    for (Usuario usuario : jugadores) {
                        if (index < listaJugadoresArr.length) {
                            listaJugadoresArr[index] = usuario.getUserName();
                            listaJugadoresDisponiblesArr[index] = usuario.getUserName();
                            index++;
                        }
                    }
                    for (int i = index; i < listaJugadoresArr.length; i++) {
                        listaJugadoresArr[i] = null;
                        listaJugadoresDisponiblesArr[i] = null;
                    }
                    gListTxtJugadores.setListData(listaJugadoresArr);
                    gListTxtJugadoresDisp.setListData(listaJugadoresDisponiblesArr);
                });
            });
        

        }

    }
    
    
    private void btnIniciarBatallasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarBatallasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnIniciarBatallasActionPerformed

    private void btnSiguienteRondaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteRondaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSiguienteRondaActionPerformed

    private void btnPausarBatallasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPausarBatallasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPausarBatallasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new AdminJuego().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(AdminJuego.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button btnActualizarJugadoresDisponibles;
    private java.awt.Button btnCargarJugadores;
    private java.awt.Button btnCargarPreguntas;
    private java.awt.Button btnCrearBatalla;
    private java.awt.Button btnIniciarBatallas;
    private java.awt.Button btnPausarBatallas;
    private java.awt.Button btnSeleccionarJugador;
    private java.awt.Button btnSiguienteRonda;
    private javax.swing.JList<String> gListTxtBatallas;
    private javax.swing.JList<String> gListTxtBatallas1;
    private javax.swing.JList<String> gListTxtJugadores;
    private javax.swing.JList<String> gListTxtJugadoresDisp;
    private javax.swing.JList<String> gListTxtJugadoresSelec;
    private javax.swing.JList<String> gListTxtRondas;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JLabel jlabelCargaJugadoresConf;
    private javax.swing.JLabel jlabelCargaPreguntasConf;
    private javax.swing.JTextArea txtAPreguntas;
    // End of variables declaration//GEN-END:variables
}
